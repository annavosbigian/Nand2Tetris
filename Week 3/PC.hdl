// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    //the register takes in whatever input is the result of the Mux comps
    Register(in=resetout, load=true, out=regout, out=out);

    //need to have an increment by 1
    Inc16(in=regout, out=incout1);

    //work through the else’s backwards
    //a is register’s output, b is inc+
    Mux16(a=regout, b=incout1, sel=inc, out=incout2);

    //a is the result of inc being 0 or 1, b is the in 
    Mux16(a=incout2, b=in, sel=load, out=loadout);

    //a is result of load being 0 or 1 and b resets to 0
    Mux16(a=loadout, b=false, sel=reset, out=resetout);
}
